###############################################################################
# impact.acd: kintex7 device specific data file.
#
# $Header: /devl/xcs/repo/env/Jobs/Cse/XilConfig/data/qkintex7.acd,v 1.1 2012/04/14 22:29:01 jake Exp $
#
###############################################################################

###############################
# Properties                  #
###############################
PROPERTY = {
  WAITCLOCKCYCLES = 100; 
  ISC_STYLE_PROGRAM = TRUE; 
  ISC_REGISTER_SIZE = 32; 
  REC_SIZE = 32; 
  KEY_REC_SIZE = 32; 
  PAD_SIZE = 64; 
  SUPPORTED = TRUE; 
  DEVICE_TYPE = "FPGA"; 
  IDCODE = TRUE; 
  VERIFY_PROGRESS_COUNT = "DYNAMIC_CALCULATION"; 
  CHECKSUM_PROGRESS_COUNT = "DYNAMIC_CALCULATION"; 
  BLANKCHECK_PROGRESS_COUNT = "DYNAMIC_CALCULATION"; 
  PROGRAM_PROGRESS_COUNT = "DYNAMIC_CALCULATION"; 
  READBACK_PROGRESS_COUNT = "DYNAMIC_CALCULATION"; 
  ERASE_PROGRESS_COUNT = "DYNAMIC_CALCULATION"; 
  READBACK_OFFSET = 0; 
  ISC_FUSE = "XSC_DNA"; 
  ISC_ENABLE = "ISC_ENABLE"; 
  ISC_DISABLE = "ISC_DISABLE"; 
  ISC_ADV_FPGA_OPTIMIZATION = TRUE; 
  SMAP_ADVANCED_READBACK = TRUE; 
  SPI_SUPPORTED = TRUE; 
  BPI_SUPPORTED = TRUE; 
  DONE_BIT = 5; 
  INIT_BIT = 4; 
  CONCURRENT_CLASS = "CCChain"; 
  USERCODE = TRUE; 
  NUM_PROCESSOR = 0; 
  FRAME_SIZE = 3232; 
  STATUS_LOCATION_31 = "[31] RESERVED"; 
  STATUS_LOCATION_30 = "[30] CFGBVS PIN"; 
  STATUS_LOCATION_29 = "[29] BAD PACKET ERROR"; 
  STATUS_LOCATION_28 = "[28] PUDC_B PIN"; 
  STATUS_LOCATION_27 = "[27] HMAC ERROR"; 
  STATUS_LOCATION_26 = "[26] CFG BUS WIDTH DETECTION"; 
  STATUS_LOCATION_25 = "[25] CFG BUS WIDTH DETECTION"; 
  STATUS_LOCATION_24 = "[24] RESERVED"; 
  STATUS_LOCATION_23 = "[23] RESERVED"; 
  STATUS_LOCATION_22 = "[22] RESERVED"; 
  STATUS_LOCATION_21 = "[21] RESERVED"; 
  STATUS_LOCATION_20 = "[20] CFG STARTUP STATE MACHINE PHASE"; 
  STATUS_LOCATION_19 = "[19] CFG STARTUP STATE MACHINE PHASE"; 
  STATUS_LOCATION_18 = "[18] CFG STARTUP STATE MACHINE PHASE"; 
  STATUS_LOCATION_17 = "[17] SYSTEM MONITOR OVER-TEMP ALARM STATUS"; 
  STATUS_LOCATION_16 = "[16] SECURITY ERROR"; 
  STATUS_LOCATION_15 = "[15] IDCODE ERROR"; 
  STATUS_LOCATION_14 = "[14] DONE PIN"; 
  STATUS_LOCATION_13 = "[13] DONE INTERNAL SIGNAL STATUS"; 
  STATUS_LOCATION_12 = "[12] INIT_B PIN"; 
  STATUS_LOCATION_11 = "[11] INIT_B INTERNAL SIGNAL STATUS"; 
  STATUS_LOCATION_10 = "[10] MODE PIN M[2]"; 
  STATUS_LOCATION_9 = "[9] MODE PIN M[1]"; 
  STATUS_LOCATION_8 = "[8] MODE PIN M[0]"; 
  STATUS_LOCATION_7 = "[7] GHIGH STATUS"; 
  STATUS_LOCATION_6 = "[6] GWE STATUS"; 
  STATUS_LOCATION_5 = "[5] GTS_CFG_B STATUS"; 
  STATUS_LOCATION_4 = "[4] END OF STARTUP (EOS) STATUS"; 
  STATUS_LOCATION_3 = "[3] DCI MATCH STATUS"; 
  STATUS_LOCATION_2 = "[2] PLL LOCK STATUS"; 
  STATUS_LOCATION_1 = "[1] DECRYPTOR ENABLE"; 
  STATUS_LOCATION_0 = "[0] CRC ERROR"; 
  BOOTSTS_15 = "[15] HMAC_ERROR_1 - HMAC ERROR"; 
  BOOTSTS_14 = "[14] WRAP_ERROR_1 - BPI FLASH ADDRESS COUNTER WRAP AROUND ERROR"; 
  BOOTSTS_13 = "[13] CRC_ERROR_1 - CYCLIC REDUNDANCY CHECK (CRC) ERROR"; 
  BOOTSTS_12 = "[12] ID_ERROR_1 - FPGA DEVICE IDCODE ERROR"; 
  BOOTSTS_11 = "[11] WTO_ERROR_1 - WATCHDOG TIME OUT ERROR"; 
  BOOTSTS_10 = "[10] IPROG_1 - INTERNAL WARMBOOT (IPROG) TRIGGERED RECONFIGURATION"; 
  BOOTSTS_9 = "[9] FALLBACK_1 - FALLBACK TRIGGERED RECONFIGURATION"; 
  BOOTSTS_8 = "[8] VALID_1 - ERROR OR END OF STARTUP (EOS) DETECTED"; 
  BOOTSTS_7 = "[7] HMAC_ERROR_0 - HMAC ERROR"; 
  BOOTSTS_6 = "[6] WRAP_ERROR_0 - BPI FLASH ADDRESS COUNTER WRAP AROUND ERROR"; 
  BOOTSTS_5 = "[5] CRC_ERROR_0 - CYCLIC REDUNDANCY CHECK (CRC) ERROR"; 
  BOOTSTS_4 = "[4] ID_ERROR_0 - FPGA DEVICE IDCODE ERROR"; 
  BOOTSTS_3 = "[3] WTO_ERROR_0 - WATCHDOG TIME OUT ERROR"; 
  BOOTSTS_2 = "[2] IPROG_0 - INTERNAL WARMBOOT (IPROG) TRIGGERED RECONFIGURATION"; 
  BOOTSTS_1 = "[1] FALLBACK_0 - FALLBACK TRIGGERED RECONFIGURATION"; 
  BOOTSTS_0 = "[0] VALID_0 - ERROR OR END OF STARTUP (EOS) DETECTED"; 
  EFUSE_SUPPORTED = TRUE; 
  EFUSE_AES_ONLY_BIT = 0; 
  EFUSE_AES_EXCLUSIVE_BIT = 1; 
  EFUSE_KEY_AND_USER_WRITE_ENABLE_BIT = 2; 
  EFUSE_KEY_READ_ENABLE_BIT = 3; 
  EFUSE_USER_READ_ENABLE_BIT = 4; 
  EFUSE_CNTL_WRITE_ENABLE_BIT = 5; 
  EFUSE_PROGRAM_WAIT_TIME = 9; 
  EFUSE_NO_CDR_BIT_INDEX = 4; 
  EFUSE_TPREF_SEL_BIT_INDEX = 13; 
  EFUSE_TPREF_SEL_BIT_LENGTH = 2; 
  EFUSE_PROGRAM_VPP_SEL = 9; # in decimal
  EFUSE_PROGRAM_VPP_SEL_BIT_LENGTH = 5; 
  EFUSE_PROGRAM_VPP_SEL_BIT_INDEX = 19; 
  EFUSE_PROGRAM_PROGRESS_COUNT = 0; 
  EFUSE_MAX_PROGRAM_RETRY_COUNT = 2; 
  EFUSE_KEY_REG_BIT_LENGTH = 256; 
  EFUSE_ID_REG_BIT_LENGTH = 64; 
  EFUSE_USER_REG_BIT_LENGTH = 32; 
  EFUSE_LO_USER_REG_BIT_LENGTH = 8; 
  EFUSE_HI_USER_REG_BIT_LENGTH = 24; 
  EFUSE_CNTL_REG_BIT_LENGTH = 14; 
  EFUSE_CNTL_REGISTER_BIT_31 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_30 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_29 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_28 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_27 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_26 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_25 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_24 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_23 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_22 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_21 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_20 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_19 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_18 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_17 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_16 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_15 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_14 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_13 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_12 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_11 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_10 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_9 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_8 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_7 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_6 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_5 = "Disable Control Register Write"; 
  EFUSE_CNTL_REGISTER_BIT_4 = "Disable User Register Read"; 
  EFUSE_CNTL_REGISTER_BIT_3 = "Disable Key Register Read"; 
  EFUSE_CNTL_REGISTER_BIT_2 = "Disable Key / User Register Write"; 
  EFUSE_CNTL_REGISTER_BIT_1 = "Configure After Power Cycle Only"; 
  EFUSE_CNTL_REGISTER_BIT_0 = "Use AES eFUSE Key Only"; 
  INIT_WAIT_TIME = 9532; 
};

## The following data for the devices are updated. June 14, 2004

#The PROGRAM_PROGRESS_COUNT is FRAME_COUNT/16 because each data size is FRAME_SIZE*16 =VERIFY_PROGRESS_COUNT
#non bram-word count is FDRI wordCount in the xl spreadsheet.

xc7k325t = {
  PROPERTY = {
    FRAME_COUNT = 28985; 
    CLB_FRAMES = 19404; 
    NON_BRAM_WC = 2294013; 
    FPGA_ISC_PROGRAM_PROGRESS_COUNT = 2927485; 
    FPGA_PROGRAM_PROGRESS_COUNT = 1812; 
    PROGRAM_PROGRESS_COUNT = 1812; 
  };
};

xc7k410t = {
  PROPERTY = {
    FRAME_COUNT = 40192; 
    CLB_FRAMES = 23940; 
    NON_BRAM_WC = 2973440; 
    FPGA_ISC_PROGRAM_PROGRESS_COUNT = 4059392; 
    FPGA_PROGRAM_PROGRESS_COUNT = 2512; 
    PROGRAM_PROGRESS_COUNT = 2512; 
  };
};

###############################
# Operations Table            #
###############################
OPERATION = {
  PROGRAM = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","EXPRESSSVF","EXPRESSXSVF","STAPL"), 
    ("BSFILE","SVF","STAPL"), 
    ("HW140","PARALLEL"), 
    ("SS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN"), 
    ("SM","PARALLEL","MULTILINX")
  );
  VERIFY = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN"), 
    ("HW140","PARALLEL"), 
    ("SM","PARALLEL","MULTILINX")
  );
  READIDCODE = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"), 
    ("BSFILE","SVF","STAPL"), 
    ("HW140","PARALLEL")
  );
  CHECKIDCODE = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"), 
    ("BSFILE","SVF","STAPL"), 
    ("HW140","PARALLEL")
  );
  READSTATUSREGISTER = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"), 
    ("BSFILE","SVF","STAPL"), 
    ("HW140","PARALLEL")
  );
  READUSERCODE = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"), 
    ("BSFILE","SVF","STAPL"), 
    ("HW140","PARALLEL")
  );
  BYPASS = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"), 
    ("BSFILE","PARALLEL","SVF","STAPL"), 
    ("HW140","PARALLEL")
  );
  HIGHZ = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"), 
    ("BSFILE","SVF","STAPL"), 
    ("HW140","PARALLEL")
  );
  DOPRELOAD = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"), 
    ("BSFILE","SVF","STAPL"), 
    ("HW140","PARALLEL")
  );
  ISPENABLE = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"), 
    ("BSFILE","SVF","STAPL"), 
    ("HW140","PARALLEL")
  );
  CONLD = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"), 
    ("BSFILE","SVF","STAPL"), 
    ("HW140","PARALLEL")
  );
  EXPRESSSVF =     ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN"); 
  EXPRESSXSVF =     ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN"); 
};




PROGRAM_OPTION = {
  VERIFY = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN"), 
    ("HW140","PARALLEL"), 
    ("SM","PARALLEL","MULTILINX")
  );
  PROGRAMKEY = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"), 
    ("BSFILE","SVF","STAPL"), 
    ("HW140","PARALLEL")
  );
  SECUREMODE = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"), 
    ("BSFILE","SVF","STAPL"), 
    ("HW140","PARALLEL")
  );
};

BSDL_OPERATION = {
  READIDCODE =     ("PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"); 
  READSTATUSREGISTER =     ("PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"); 
  CHECKIDCODE =     ("PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"); 
  READUSERCODE =     ("PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"); 
};

BSDL_INSTRUCTION_OPCODE  = {
  IDCODE = 001001; 
  BYPASS = 111111; 
  EXTEST = 100110; 
  SAMPLE = 000001; 
  PRELOAD = 000001; 
  USERCODE = 001000; 
  HIGHZ = 001010; 
  EXTEST_PULSE = 111100; 
  EXTEST_TRAIN = 111101; 
  ISC_ENABLE = 010000; 
  ISC_PROGRAM = 010001; 
  ISC_NOOP = 010100; 
  XSC_READ_RSVD = 010101; 
  ISC_DISABLE = 010110; 
  XSC_PROGRAM_KEY = 010010; 
  XSC_DNA = 010111; 
  CFG_OUT = 000100; 
  CFG_IN = 000101; 
  JPROGRAM = 001011; 
  JSTART = 001100; 
  JSHUTDOWN = 001101; 
  FUSE_CTS = 110000; 
  FUSE_KEY = 110001; 
  FUSE_DNA = 110010; 
  FUSE_USER = 110011; 
  FUSE_CNTL = 110100; 
  USER1 = 000010; 
  USER2 = 000011; 
  USER3 = 100010; 
  USER4 = 100011; 
  XADC_DRP = 110111; 
  INTEST_RSVD = 000111; 
};

BSDL_REGISTER_ACCESS  =   ("DATAREG",57,"XSC_DNA"); 

BSDL_INSTRUCTION_CAPTURE  = "XXXX01"; 


