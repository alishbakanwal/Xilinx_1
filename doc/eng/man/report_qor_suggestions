
Description:

  Report design and tool option changes related to improving the quality of
  results (QOR) as it relates to the timing of critical paths in the current
  design.

  Note: The goal of improved timing may not align with other design goals
  such as lowering power, verifying a design checklist, or implementing
  methodology fixes.

  The report includes the following sections:

   *  Design Suggestions Summary: A summary of the findings or suggestions of
      each of the detailed reports.

   *  Power Optimized BRAM: Report if the enable logic for the BRAM can be
      moved to the data path without increasing logic levels, and with
      sufficient slack available on the data path to accommodate the added
      enable logic delay.

   *  Critical Paths Ending at Control Pins: For critical paths ending at the
      control pins of flip-flops, report if the control pin logic can be
      moved to the data path without increasing logic levels, and with
      sufficient slack available on the data path to accommodate the added
      control pin logic delay.

   *  Critical Nets Replication: Recommend running physical synthesis before
      placement to replicate nets driven by LUTs and driving the enable pin
      of BRAMs, nets in the critical path having fanout greater than 100, and
      nets driving pins of a large number of macros (BRAM/DSP).

   *  BRAM/DSP Pipelining: Suggest pipelining options for BRAM and DSPs based
      on current register configurations.

   *  High Clock Skew: For critical timing paths with high clock skew,
      suggest using -gated_clock_conversion auto for synth_design if a LUT or
      flop is present in the clocking circuit. If the flop is driven by
      BUFGCE then suggest using BUFGCE_DIV. For unbalanced source and
      destination clocks, suggest balancing the circuits.

   *  Unrealistic Constraints: For tight timing constraints, for example a
      high number of logic levels with less than 500 ps per logic level,
      suggest using device/speed-grade specific combinations. Also recommend
      more timing budget allocated for big blocks.

   *  LUT Collapsing: In the case of small LUTs followed by another small
      LUT, these should get collapsed during synthesis. If not, look for
      MARK_DEBUG properties that prevent LUT combining, and suggest removing.
      Check if lUTs are from different hierarchy, suggest opt_design
      -directive AddRemap. Also look for opportunity to manually replicate
      LUTs that are driving multiple logic cones to facilitate LUT
      collapsing.

   *  SRLs in Critical Paths: Report SRLs in negative slack setup paths based
      on criticality.

   *  Congestion: In placement congested regions, when observing high LUT
      combining or high usage of MUXF*, suggest re-running synthesis with
      -directive AlteranateRoutability. When observing that the Reset net is
      driving a high number of reset pins without a BUFG, from a congested
      routing region, suggest adding a BUFG so the net can use clock routing
      resources to reduce congestion.

   *  Control Sets: Suggest strategies for improving driver replication,
      eliminating max fanout, or reducing the number of control sets.

   *  Synthesis and Optimization Strategies: Suggest recommended combinations
      of synthesis and optimization strategies which may yield better
      results.

   *  Implementation Strategies: Suggest recommended Implementation
      strategies and options which may yield better results.

Arguments:

  -file <arg> - (Optional) Write the QOR report into the specified file. The
  specified file will be overwritten if one already exists, unless -append is
  also specified.

  Note: If the path is not specified as part of the file name, the file will
  be written into the current working directory, or the directory from which
  the tool was launched.

  -append - (Optional) Append the output of the command to the specified file
  rather than overwriting it.

  Note: The -append option can only be used with the -file option.

  -return_string - (Optional) Directs the output to a Tcl string rather than
  to the standard output. The Tcl string can be captured by a variable
  definition and parsed or otherwise processed.

  Note: This argument cannot be used with the -file option.

  -design - (Optional) Report only design related improvement suggestions.

  -strategy - (Optional) Report only tool flow related improvement suggestions.

  -issues - (Optional) Report issues in the Design Summary.

  -max_paths <arg> - (Optional) Specify the number of critical paths to
  analyze. The default is the 100 worst timing paths.

  -output_dir <arg> - (Optional) Specify a directory to write files generated
  by the report_qor_suggestions command. If the -output_dir is not specified,
  the default is to write files to the current working directory, or the
  directory from which the Vivado tool was launched.

  -force <arg> - (Optional) Overwrite any existing files with the files
  created by the report_qor_suggestions command.

  -no_split - (Optional) Do not split the lines in the table when generating
  the report.

  -quiet - (Optional) Execute the command quietly, returning no messages from
  the command. The command also returns TCL_OK regardless of any errors
  encountered during execution.

  Note: Any errors encountered on the command-line, while launching the
  command, will be returned. Only errors occurring inside the command will be
  trapped.

  -verbose - (Optional) Temporarily override any message limits and return
  all messages from this command.

  Note: Message limits can be defined with the set_msg_config command.

Examples:

  The following example reports the issues found in the Design Summary:

    report_qor_suggestions -issues

See Also:

   *  report_design_analysis
