
Description:

  Returns the Sysmon debug core objects defined on the current hardware device.

  The System Monitor (SYSMON) Analog-to-Digital Converter (ADC) is used to
  measure die temperature and voltage on the hw_device. The Sysmon monitors
  the physical environment via on-chip temperature and supply sensors. The
  ADC provides a high-precision analog interface for a range of applications.
  The ADC can access up to 17 external analog input channels. Refer to
  UltraScale Architecture System Monitor User Guide (UG580), or 7 Series
  FPGAs and Zynq-7000 All Programmable SoC XADC Dual 12-Bit 1 MSPS
  Analog-to-Digital Converter User Guide (UG480) for more information on a
  specific device architecture.

  The hw_sysmon data is stored in dedicated registers called status registers
  accessible through the hw_sysmon_reg object. The values of the system
  monitor registers can be returned by the get_hw_sysmon_reg command.

  Every device that supports the system monitor will automatically have one
  or more hw_sysmon objects created when refresh_hw_device is called. When
  the hw_sysmon object is created, it is assigned a property for all the
  temperature and voltage registers, as well as the control registers. On the
  hw_sysmon object, the values assigned to the temperature and voltage
  registers are already translated to Celsius/Fahrenheit and Voltage.

  Although you can use the get_hw_sysmon_reg command to access the hex values
  stored in registers of a system monitor, you can also retrieve values of
  certain registers as formatted properties of the hw_sysmon object. For
  example, the following code retrieves the TEMPERATURE property of the
  specified hw_sysmon object rather than directly accessing the hex value of
  the register:

    set opTemp [get_property TEMPERATURE [get_hw_sysmons]

  This command returns a list of hw_sysmon objects on the current or
  specified hw_device, or returns an error if it fails.

Arguments:

  -of_objects <arg> - (Optional) Return the hw_sysmon objects of the
  specified hw_server, hw_target, or hw_device. The objects must be specified
  using the appropriate get_hw_* command.

  Note: The -of_objects option requires objects to be specified using the
  get_* commands, such as get_cells or get_pins, rather than specifying
  objects by name. In addition, -of_objects cannot be used with a search
  <pattern>.

  -regexp - (Optional) Specifies that the search <patterns> are written as
  regular expressions. Both search <patterns> and -filter expressions must be
  written as regular expressions when this argument is used. Xilinx regular
  expression Tcl commands are always anchored to the start of the search
  string. You can add ".*" to the beginning or end of a search string to
  widen the search to include a substring. See
  http://perldoc.perl.org/perlre.html for help with regular expression
  syntax.

  Note: The Tcl built-in command regexp is not anchored, and works as a
  standard Tcl command. For more information refer to
  http://www.tcl.tk/man/tcl8.5/TclCmd/regexp.htm.

  -nocase - (Optional) Perform case-insensitive matching when a pattern has
  been specified. This argument applies to the use of -regexp only.

  -filter <args> - (Optional) Filter the results list with the specified
  expression. The -filter argument filters the list of objects returned by
  get_hw_sysmons based on property values on the Sysmon cores. You can find
  the properties on an object with the report_property or list_property
  commands. In the case of the "hw_sysmon" object, "NAME", "VCCINT", and
  "VCCAUX" are some of the properties that can be used to filter results.

  The filter search pattern should be quoted to avoid having to escape
  special characters that may be found in net, pin, or cell names, or other
  properties. String matching is case-sensitive and is always anchored to the
  start and to the end of the search string. The wildcard "*" character can
  be used at the beginning or at the end of a search string to widen the
  search to include a substring of the property value.

  Note: The filter returns an object if a specified property exists on the
  object, and the specified pattern matches the property value on the object.
  In the case of the "*" wildcard character, this will match a property with
  a defined value of "".

  For string comparison, the specific operators that can be used in filter
  expressions are "equal" (==), "not-equal" (!=), "match" (=~), and
  "not-match" (!~). Numeric comparison operators <, >, <=, and >= can also be
  used. Multiple filter expressions can be joined by AND and OR (&& and ||).
  The following gets input pins that do NOT contain the "RESET" substring
  within their name:

    get_pins * -filter {DIRECTION == IN && NAME !~ "*RESET*"}

  Boolean (bool) type properties can be directly evaluated in filter
  expressions as true or not true:

    -filter {IS_PRIMITIVE && !IS_LOC_FIXED}

  -quiet - (Optional) Execute the command quietly, returning no messages from
  the command. The command also returns TCL_OK regardless of any errors
  encountered during execution.

  Note: Any errors encountered on the command-line, while launching the
  command, will be returned. Only errors occurring inside the command will be
  trapped.

  -verbose - (Optional) Temporarily override any message limits and return
  all messages from this command.

  Note: Message limits can be defined with the set_msg_config command.

  <patterns> - (Optional) Match hw_sysmons against the specified patterns.
  The default pattern is the wildcard `*` which gets a list of all hw_sysmons
  available on the current hardware device.

Example:

  The following example gets the hw_sysmon objects defined on the current
  hardware device:

    get_hw_sysmons -of_objects [current_hw_device]

See Also:

   *  connect_hw_server
   *  current_hw_device
   *  get_hw_devices
   *  get_hw_sysmon_reg
   *  open_hw_target
   *  program_hw_devices
   *  set_property
