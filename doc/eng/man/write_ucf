
Description:

  Writes physical constraints to a user constraint file (UCF). Constraints
  can be written from the top-level, which is the default, from specific
  Pblocks, or from a specific hierarchical cell.

  This command will write the constraints from all UCF files of the active
  constraint fileset. Constraints from multiple files will be included in the
  specified UCF file.

Arguments:

  -no_fixed_only - Write both fixed and unfixed placement LOCs to the
  constraint file being written. By default only the fixed LOCs will be
  written to the UCF file. Fixed LOCs are associated with user-assigned
  placements, while unfixed LOCs are associated with tool assigned
  placements.

  -constraints <arg> - Write constraints that are flagged valid, invalid, or
  all constraints (both valid and invalid). The default behavior is to export
  only valid constraints to the UCF file. However, you can specify
  -constraints values of VALID, INVALID, or ALL.

  -pblocks <arg> - One or more Pblocks from which to write the constraints.

  -cell <arg> - The name of a hierarchical cell in the current design to
  export the constraints from. The constraints will be written to the
  specified UCF file relative to the specified cell.

  Note: A design must be open when using this option.

  -quiet - (Optional) Execute the command quietly, returning no messages from
  the command. The command also returns TCL_OK regardless of any errors
  encountered during execution.

  Note: Any errors encountered on the command-line, while launching the
  command, will be returned. Only errors occurring inside the command will be
  trapped.

  -verbose - (Optional) Temporarily override any message limits and return
  all messages from this command.

  Note: Message limits can be defined with the set_msg_config command.

  <file> - The filename of the UCF file to write.

  Note: If the path is not specified as part of the file name, the file will
  be written into the current working directory, or the directory from which
  the tool was launched.

  Note: When you use -pblock or -cell, this argument specifies a directory
  name where the UCF files for each Pblock or cell will be written. Each UCF
  file will be named after a Pblock or cell. If the specified directory does
  not exist you will get an error.

Examples:

  The following example writes the valid and invalid constraints, including
  both fixed and unfixed LOCs, for all Pblocks found in the design to the
  specified directory:

    
    write_ucf -no_fixed_only -constraints all -pblocks [get_pblocks] C:/Data/FPGA_Design

See Also:

   *  read_ucf
   *  save_design
   *  save_design_as
