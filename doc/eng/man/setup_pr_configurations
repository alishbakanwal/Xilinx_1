
Description:

  Automatically creates the minimum PR configurations and child
  implementation runs based on the combination of Partition Instances and
  Reconfigurable Modules.

  In the Partial Reconfiguration (PR) design flow, the PR configuration lets
  you specify a reconfigurable module (RM) to assign to a specific instance
  of a Partition Definition (partitionDef). This flow lets you create unique
  configurations of the design based on the combination of the core design
  and one or more RMs. The PR design flow requires the implementation of each
  PR configuration, resulting in partial bitstreams for the RMs, but complete
  bitstreams for each integrated configuration. Refer to the Vivado Design
  Suite User Guide: Partial Reconfiguration (UG909) for more information.

  This command is designed to work automatically to create the needed PR
  configurations and implementation runs for those configurations.

  This command returns nothing if successful, or returns an error if the
  command fails.

Arguments:

  -partitions <arg> - (Optional) Specify a list of partition instances and
  reconfigurable module pairs to assign to the PR configuration. The argument
  must be specified as <partitionInstance>:<RM> pairs. This format lets you
  assign different RMs to multiple instances of a single partitionDef in the
  design.

  -force - (Optional) Delete current PR configurations and configuration
  runs, and create new PR configurations and runs.

  -run <arg> - (Optional) Specify the parent run to use for the
  implementation run of a PR configuration.

  -quiet - (Optional) Execute the command quietly, returning no messages from
  the command. The command also returns TCL_OK regardless of any errors
  encountered during execution.

  Note: Any errors encountered on the command-line, while launching the
  command, will be returned. Only errors occurring inside the command will be
  trapped.

  -verbose - (Optional) Temporarily override any message limits and return
  all messages from this command.

  Note: Message limits can be defined with the set_msg_config command.

Example:

  The following example automatically creates the necessary PR
  configurations, and PR config implementation runs, to support the
  partitionDefs and RMs in the project:

    setup_pr_configurations

See Also:

   *  create_partition_def
   *  create_pr_configuration
   *  create_reconfig_module
   *  current_pr_configuration
   *  delete_pr_configurations
   *  get_pr_configurations
