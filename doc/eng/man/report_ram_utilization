
Description:

  Report the utilization of RAM resources on the target part in the current
  synthesized or implemented design. The report is returned to the standard
  output, unless the -file or -return_string arguments are used.

  The report includes the usage of different type of memory resources on the
  device, including Block RAM and distributed RAM, and can optionally provide
  added configuration details.

  The RAM utilization report is based on unique addresses. For each RAM or
  memory array the default report provides information about port used, clock
  net, read and write width and depth, per address. The detailed report
  provides additional information on each cell instance for RAMs consisting
  of multiple memory primitives, including distributed RAMs.

  Though RAM utilization can be reported early in the design process, the
  report will be more detailed as the design progresses from synthesis
  through implementation. After placement it is useful to know physical
  details to aid in debugging timing and placement issues. The physical
  details include the LOC of instances, and the bounding box occupied by RAM
  primitives to help determine if the RAMs are well-grouped or placed over
  multiple columns.

  The report is broken into two sections, a summary of the memory types and
  quantity used, and a specific summary of the memory usage in the design.
  The specific information presented in the memory usage table can vary from
  the default report and the report generated with the -detail option.

  The default report includes the following information:

   *  Memory Name: This lets you make a quick connection from an implemented
      RAM back to its occurrence in the design source files. The specific
      name depends on the type of memory in the design:

       -  Instantiated Memory: This is the RAM instance name.

       -  IP-based: For a memory generated from the IP Catalog, this is the
          name of the IP core.

       -  Inferred Memory: the HDL array name, for example Vivado infers
          ram_name_reg for an array called ram_name .

   *  Array size: The number of memory bits.

   *  RAM Utilization: Total RAM by cell type. For example a block-RAM-based
      memory array could report RAMB36E1: 7, RAMB18E1: 1.

   *  Address - The full hierarchical net name of the top-most net driving
      the address input.

   *  Port - The port driven by the address net. For Block RAM this will be
      port A or B, for distributed RAM this will specify either Read port or
      Read-Write port.

   *  Clock - The full hierarchical net name of the clock.

   *  Read/Write Width and Depth - Depth and width of write and read ports.
      Both write and read are included due to the possibility of asymmetric
      block RAM usage. For distributed RAM, the same values would appear in
      both write and read columns. Unused will be listed if the port is
      unused.

   *  Address Register - Indicates whether the memory primitive address is
      driven by a register.

   *  Input Register - Indicates whether the data input of the memory
      primitive is driven by a register.

   *  Output Register - Note that phys_opt_design may re-time and move
      registers involving individual primitives to improve timing. To
      simplify reporting, use the value Multiple when there are two or more
      possible values.

       -  Internal - (Block RAM only) The block RAM is fully synchronous and
          supports an internal output register. The RAM uses the DOA/DOB_REG
          inside the primitive.

       -  Internal/External - (Block RAM only) The RAM uses the DOA/DOB_REG
          inside the primitive and the primitive data output drives a
          register.

       -  External - The RAM primitive data output drives a register, and in
          the case of block RAM the DOA/DOB_REG is not used. The distributed
          RAM has synchronous write and asynchronous read, so it is often
          designed with external registers.

       -  Combinational - (Distributed RAM only) The RAM primitive output
          does not drive a register.

       -  Combinational/External - (Distributed RAM only) The RAM primitive
          output drives both combinational logic and registers. This
          configuration is found as an IP Catalog option.

   *  Bounding Box - The size of the memory array specified as the number of
      columns x rows. For block RAM this describes an array of 36kbit Block
      RAM Tiles. For distributed RAM, this describes the array of slices or
      CLBs.

   *  Range - The physical range of the bounding box from the lower-left
      corner to the upper-right corner.

  Additional information provided in the detailed report include:

   *  Cell Name: The full hierarchical cell name of the block RAM primitive,
      LUTRAM primitive, or macro.

   *  RAM Size: The size in bits of the RAM that is used.

   *  Cell Type: This is the REF_NAME property on the cell.

   *  LOC: This is the LOC property on the cell, available after it is placed.

  This command returns the requested report to the Tcl console, to a file, or
  as a string; or returns an error if it fails.

Arguments:

  -file <arg> - (Optional) Write the report into the specified file. This
  command will overwrite any files of the same name without warning.

  Note: If the path is not specified as part of the file name, the file will
  be written into the current working directory, or the directory from which
  the tool was launched.

  -append - (Optional) Append the output of the command to the specified file
  rather than overwriting it.

  Note: The -append option can only be used with the -file option.

  -return_string - (Optional) Directs the output to a Tcl string rather than
  to the standard output. The Tcl string can be captured by a variable
  definition and parsed or otherwise processed.

  Note: This argument cannot be used with the -file option.

  -cells <arg> - (Optional) Report the RAM resources utilized by one or more
  hierarchical cells in the current design. The cells must be specified as
  objects, using get_cells, rather than by name.

  -detail - (Optional) Reports various configuration properties of the RAM,
  like size, write and read width and depth, address, and LOC.

  -quiet - (Optional) Execute the command quietly, returning no messages from
  the command. The command also returns TCL_OK regardless of any errors
  encountered during execution.

  Note: Any errors encountered on the command-line, while launching the
  command, will be returned. Only errors occurring inside the command will be
  trapped.

  -verbose - (Optional) Temporarily override any message limits and return
  all messages from this command.

  Note: Message limits can be defined with the set_msg_config command.

Examples:

  The following example provides a detailed report of the RAM resources
  utilized by specified cells, and writes the results to the specified file:

    report_ram_utilization -cells [get_cells U_*]  
       -detail -file C:/Data/ram_util.txt

See Also:

   *  all_rams
   *  get_cells
   *  report_utilization
