
Description:

  Gets a list of evaluation boards available for use by the current project.

  The board file, board.xml located in the data/boards folder of the Vivado
  Design Suite installation area, stores information regarding board
  attributes. The board provides a representation of the overall system that
  the Xilinx device is a part of, and can help define key aspects of the
  design, such as clock constraints, I/O port assignments, and supported
  interfaces. You can create custom boards by defining a custom Board
  Interface file, as described in the Vivado Design Suite User Guide:
  System-Level Design Entry (UG895).

  The board in use by the project is returned by the current_board_part
  command.

  The board can be specified:

   *  When the project is created by selecting Boards from the Default Part
      dialog box.

   *  By setting the BOARD property on the current project as shown in the
      example.

   *  By selecting the Project Device in the Project Settings dialog box in
      an open project in the Vivado IDE.

  Refer to the Vivado Design Suite User Guide: System-Level Design Entry
  (UG895) for information on creating projects, and on configuring project
  settings.

  Note: When you specify the board with the set_property command, the target
  part is also changed to match the part required by the specified BOARD
  property.

  This command returns a list of boards that are available for use by the
  current project, or returns an error if it fails.

Arguments:

  -regexp - (Optional) Specifies that the search <patterns> are written as
  regular expressions. Both search <patterns> and -filter expressions must be
  written as regular expressions when this argument is used. Xilinx regular
  expression Tcl commands are always anchored to the start of the search
  string. You can add ".*" to the beginning or end of a search string to
  widen the search to include a substring. See
  http://perldoc.perl.org/perlre.html for help with regular expression
  syntax.

  Note: The Tcl built-in command regexp is not anchored, and works as a
  standard Tcl command. For more information refer to
  http://www.tcl.tk/man/tcl8.5/TclCmd/regexp.htm.

  -nocase - (Optional) Perform case-insensitive matching when a pattern has
  been specified. This argument applies to the use of -regexp only.

  -filter - (Optional) Filter the results list with the specified expression.
  The -filter argument filters the list of objects returned by get_boards
  based on property values on the boards. You can find the properties on an
  object with the report_property or list_property commands. Any
  property/value pair can be used as a filter. In the case of the board
  object, "NAME", "DEVICE", and "FAMILY" are some of the properties that can
  be used to filter results.

  The filter search pattern should be quoted to avoid having to escape
  special characters that may be found in net, pin, or cell names, or other
  properties. String matching is case-sensitive and is always anchored to the
  start and to the end of the search string. The wildcard "*" character can
  be used at the beginning or at the end of a search string to widen the
  search to include a substring of the property value.

  Note: The filter returns an object if a specified property exists on the
  object, and the specified pattern matches the property value on the object.
  In the case of the "*" wildcard character, this will match a property with
  a defined value of "".

  For string comparison, the specific operators that can be used in filter
  expressions are "equal" (==), "not-equal" (!=), "match" (=~), and
  "not-match" (!~). Numeric comparison operators <, >, <=, and >= can also be
  used. Multiple filter expressions can be joined by AND and OR (&& and ||).
  The following gets input pins that do NOT contain the "RESET" substring
  within their name:

    get_pins * -filter {DIRECTION == IN && NAME !~ "*RESET*"}

  Boolean (bool) type properties can be directly evaluated in filter
  expressions as true or not true:

    -filter {IS_PRIMITIVE && !IS_LOC_FIXED}

  -of_objects <args> - (Optional) Get the boards of the specified
  board_component objects as returned by get_board_components.

  -quiet - (Optional) Execute the command quietly, returning no messages from
  the command. The command also returns TCL_OK regardless of any errors
  encountered during execution.

  Note: Any errors encountered on the command-line, while launching the
  command, will be returned. Only errors occurring inside the command will be
  trapped.

  -verbose - (Optional) Temporarily override any message limits and return
  all messages from this command.

  Note: Message limits can be defined with the set_msg_config command.

  <patterns> - (Optional) Match boards against the specified search patterns.
  The default pattern is the wildcard `*` which gets a list of all boards
  available for use in the project. More than one pattern can be specified to
  find multiple boards based on different search criteria.

  Note: You must enclose multiple search patterns in braces, {}, or quotes,
  "", to present the list as a single element.

Examples:

  The following example reports the properties of the specified evaluation
  board:

    report_property [get_boards -filter {LIBRARY_NAME==artix7}]

  The following example returns all boards matching the specified search
  patterns:

    get_boards {*ar* *kc*}

See Also:

   *  current_board_part
   *  get_board_interfaces
   *  get_board_pins
   *  list_property
   *  report_property
   *  set_property
