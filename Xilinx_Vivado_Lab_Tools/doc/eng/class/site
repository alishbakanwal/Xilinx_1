SITE

Description
A site is a device object representing one of many different types of logic 
resources available on the target Xilinx FPGA. Sites includes slices which are 
collections of basic logic elements (BELs) like look-up-tables (LUTs), flip-flops, 
muxes, carry logic resources to implement fast addition, subtraction, or comparison 
operations, with dedicated carry chains running vertically from slice to slice. 
Two slices are grouped into a configurable logic block (CLB), which is a type of 
TILE object on the device. 

SLICEMs can be configured to act as distributed RAM. Distributed Memory is a 
configuration feature of certain LUTs so it behaves as a small 64-bit memory. 
SLICEL LUTs can only function as logic and not memory.

Sites also include diverse objects such as block RAM, DSPs, I/O blocks, clock 
resources, and GT blocks. You utilize slice resources by inference from the HDL 
source by Vivado synthesis, or by instantiating a primitive or macro from the 
FPGA library, or an IP core from the Vivado IP catalog. The Libraries Guide 
describes the list of primitives that can be instantiated. 

The available SITE types vary depending on the Xilinx FPGA in use. Available SITE 
types include:

AMS_ADC AMS_DAC 
BSCAN BSCAN_JTAG_MONE2 
BUFG BUFGCTRL BUFG_LB BUFHCE 
BUFIO BUFMRCE BUFR 
CAPTURE 
DCIRESET DNA_PORT 
DRP_AMS_ADC DRP_AMS_DAC 
DSP48E1 
EFUSE_USR 
FIFO18E1 FIFO36E1 
FRAME_ECC 
GLOBALSIG 
GTHE2_CHANNEL GTHE2_COMMON 
GTPE2_CHANNEL GTPE2_COMMON 
GTXE2_CHANNEL GTXE2_COMMON 
GTZE2_OCTAL 
IBUFDS_GTE2 
ICAP 
IDELAYCTRL IDELAYE2 IDELAYE2_FINEDELAY 
ILOGICE2 ILOGICE3 
IN_FIFO 
IOB IOB18 IOB18M IOB18S 
IOB33 IOB33M IOB33S 
IOBM IOBS 
IPAD ISERDESE2 
KEY_CLEAR 
MMCME2_ADV 
ODELAYE2 ODELAYE2_FINEDELAY 
OLOGICE2 OLOGICE3 
OPAD 
OSERDESE2 
OUT_FIFO 
PCIE_2_1 PCIE_3_0 
PHASER_IN PHASER_IN_ADV PHASER_IN_PHY 
PHASER_OUT PHASER_OUT_ADV PHASER_OUT_PHY 
PHASER_REF 
PHY_CONTROL 
PLLE2_ADV 
PMV2 
RAMB18E1 
RAMB36E1 
RAMBFIFO36E1 
SLICEL SLICEM 
STARTUP 
TIEOFF 
USR_ACCESS 
XADC

Related Objects
Sites are related to many different netlist and device objects. Leaf-cells, flops, 
and latches are mapped to bels which are in turn mapped to sites like slices, or 
are mapped directly to sites such as BRAMs and DSPs. Bels and sites are grouped 
into tiles, and are assigned to clock_regions on the device. 

Ports, pins, IO banks, and package_pins relate to IO blocks (IOBs) which are also 
sites. Sites also have pins, or site_pins, that are associated with nodes, pins, 
and nets. 

Properties
There are over 80 different SITE types on Xilinx FPGA devices, but they all share 
the following properties: 

Property	Type	Read-only	Visible	Value
ALTERNATE_SITE_TYPES	string	TRUE	TRUE	
CLASS	string	TRUE	TRUE	site
CLOCK_REGION	string	TRUE	TRUE	X0Y6
IS_BONDED	bool	TRUE	TRUE	0
IS_CLOCK_BUFFER	bool	TRUE	TRUE	0
IS_CLOCK_PAD	bool	TRUE	TRUE	0
IS_GLOBAL_CLOCK_BUFFER	bool	TRUE	TRUE	0
IS_GLOBAL_CLOCK_PAD	bool	TRUE	TRUE	0
IS_PAD	bool	TRUE	TRUE	0
IS_REGIONAL_CLOCK_BUFFER	bool	TRUE	TRUE	0
IS_REGIONAL_CLOCK_PAD	bool	TRUE	TRUE	0
IS_RESERVED	bool	TRUE	TRUE	0
IS_TEST	bool	TRUE	TRUE	0
IS_USED	bool	TRUE	TRUE	0
MANUAL_ROUTING	string	FALSE	TRUE	
NAME	string	TRUE	TRUE	SLICE_X2Y349
NUM_ARCS	int	TRUE	TRUE	153
NUM_BELS	int	TRUE	TRUE	32
NUM_INPUTS	int	TRUE	TRUE	37
NUM_OUTPUTS	int	TRUE	TRUE	13
NUM_PINS	int	TRUE	TRUE	50
PRIMITIVE_COUNT	int	TRUE	TRUE	0
PROHIBIT	bool	FALSE	TRUE	0
PROHIBIT_FROM_PERSIST	bool	TRUE	TRUE	0
RPM_X	int	TRUE	TRUE	21
RPM_Y	int	TRUE	TRUE	698
SITE_PIPS	string	FALSE	TRUE	
SITE_TYPE	enum	TRUE	TRUE	SLICEM

The properties assigned to SITE objects are the same for all SITE_TYPEs. To report 
the properties for any of the SITE_TYPEs, you can use the report_property command:

	report_property -all [lindex [get_sites -filter {SITE_TYPE == <SITE_TYPE>}] 0]

Where <SITE_TYPE> should be replaced by one of the listed SITE types. For example:

	report_property -all [lindex [get_sites -filter {SITE_TYPE == DSP48E1}] 0]
	report_property -all [lindex [get_sites -filter {SITE_TYPE == RAMB36E1}] 0]
	report_property -all [lindex [get_sites -filter {SITE_TYPE == BUFGCTRL }] 0]
