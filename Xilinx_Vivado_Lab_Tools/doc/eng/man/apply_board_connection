
Description:

  Connects the interface pin of an IP core in the specified block design to
  the interface of the current board part in the current project or design.

  The board part provides a representation of the Xilinx device in the
  context of the board-level system, and can help define key aspects of the
  design, such as clock constraints, I/O port assignments, and supported
  interfaces. The board part file stores information regarding board
  attributes. The file, called board_part.xml , is located in the
  data/boards/board_parts folder of the Vivado Design Suite installation
  area.

  The command lets you quickly connect compatible interface pins of an IP
  Integrator block design to the appropriate interface definition on the
  current board part. To make the connection between the IP core to the board
  part, the IP Integrator feature of the Vivado Design Suite adds an external
  interface port and interface connection to the block design. The added
  external interface port is named for the specified board part interface.

  The apply_board_connection commands uses the available interfaces of the
  current board part defined in the project. An error is returned if the
  project uses a target part rather than a target board. You can use the
  current_board_part command to identify the target board used by the
  project, or get_board_parts to list the boards available for use by the
  project. Use the get_board_part_interfaces command to determine the list of
  available interfaces on the current board.

  To remove an existing IP interface connection, specify the -ip_intf option,
  but do not specify the -board_interface. If no board part interface is
  specified, the IP interface pin is disconnected.

  This command returns a transcript of it actions, or returns an error if it
  fails.

Arguments:

  -board_interface <arg> - (Optional) Specifies the interface definition to
  connect to the specified IP core interface. If the -board_interface option
  is not specified, or is specified with an empty string value, "", an
  existing connection on the IP interface pin will be removed.

  -ip_intf <arg> - (Required) Specifies the interface pin of an IP core in
  the IP Integrator Block Design defined by the -diagram option. The IP
  Interface pin is specified in the form "IP_core_name/interface_pin_name".
  In the first example below, the IP core instance name is
  "/proc_sys_reset_0" and the Interface pin is "/ext_reset", combined as seen
  in the example.

  -diagram <arg> - (Required) The name of the IP Integrator block design
  where the IP core instance is found.

  -quiet - (Optional) Execute the command quietly, returning no messages from
  the command. The command also returns TCL_OK regardless of any errors
  encountered during execution.

  Note: Any errors encountered on the command-line, while launching the
  command, will be returned. Only errors occurring inside the command will be
  trapped.

  -verbose - (Optional) Temporarily override any message limits and return
  all messages from this command.

  Note: Message limits can be defined with the set_msg_config command.

Example:

  The following example connects the SGMII interface, defined in the current
  board part, to the processor reset IP core:

    apply_board_connection -board_interface "reset" \ 
       -ip_intf "/proc_sys_reset_0/ext_reset" -diagram "design_2"

  This example removes the connection on the specified interface pin, because
  the -board_interface option is an empty string:

    apply_board_connection -board_interface "" \ 
       -ip_intf "/proc_sys_reset_0/ext_reset" -diagram "design_2"

See Also:

   *  create_port
   *  current_board_part
   *  get_board_part_interfaces
   *  get_board_parts
   *  write_checkpoint
   *  write_edif
