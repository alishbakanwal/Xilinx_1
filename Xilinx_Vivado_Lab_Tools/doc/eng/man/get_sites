
Description:

  Gets a list of sites on the target device that match a specified search
  pattern. The default command gets a list of all sites on the target device.

  Note: To improve memory and performance, the get_* commands return a
  container list of a single type of objects (e.g. cells, nets, pins, or
  ports). You can add new objects to the list (using lappend for instance),
  but you can only add the same type of object that is currently in the list.
  Adding a different type of object, or string, to the list is not permitted
  and will result in a Tcl error.

Arguments:

  -regexp - (Optional) Specifies that the search <patterns> are written as
  regular expressions. Both search <patterns> and -filter expressions must be
  written as regular expressions when this argument is used. Xilinx regular
  expression Tcl commands are always anchored to the start of the search
  string. You can add ".*" to the beginning or end of a search string to
  widen the search to include a substring. See
  http://perldoc.perl.org/perlre.html for help with regular expression
  syntax.

  Note: The Tcl built-in command regexp is not anchored, and works as a
  standard Tcl command. For more information refer to
  http://www.tcl.tk/man/tcl8.5/TclCmd/regexp.htm.

  -nocase - (Optional) Perform case-insensitive matching when a pattern has
  been specified. This argument applies to the use of -regexp only.

  -filter <args> - (Optional) Filter the results list with the specified
  expression. The -filter argument filters the list of objects returned by
  get_sites based on property values on the sites. You can find the
  properties on an object with the report_property or list_property commands.
  In the case of the site object, "SITE_TYPE", "IS_USED", "NUM_INPUTS", and
  "NUM_OUTPUTS" are some of the properties that can be used to filter
  results.

  The filter search pattern should be quoted to avoid having to escape
  special characters that may be found in net, pin, or cell names, or other
  properties. String matching is case-sensitive and is always anchored to the
  start and to the end of the search string. The wildcard "*" character can
  be used at the beginning or at the end of a search string to widen the
  search to include a substring of the property value.

  Note: The filter returns an object if a specified property exists on the
  object, and the specified pattern matches the property value on the object.
  In the case of the "*" wildcard character, this will match a property with
  a defined value of "".

  For string comparison, the specific operators that can be used in filter
  expressions are "equal" (==), "not-equal" (!=), "match" (=~), and
  "not-match" (!~). Numeric comparison operators <, >, <=, and >= can also be
  used. Multiple filter expressions can be joined by AND and OR (&& and ||).
  The following gets input pins that do NOT contain the "RESET" substring
  within their name:

    get_pins * -filter {DIRECTION == IN && NAME !~ "*RESET*"}

  Boolean (bool) type properties can be directly evaluated in filter
  expressions as true or not true:

    -filter {IS_PRIMITIVE && !IS_LOC_FIXED}

  -range <arg> - (Optional) Get all the sites that fall into a specified
  range. The range of sites must be specified with two site values, of the
  same SITE_TYPE, such as {SLICE_X2Y12 SLICE_X3Y15}. The SITE_TYPE of a site
  can be determined by the report_property command.

  Note: Specifying a range with two different types will result in an error.

  -of_objects <arg> - (Optional) Get sites from the specified object or
  objects. Valid objects include: tiles, BELs, pins, package pins, ports,
  Pblocks, I/O Banks, cells, and clock_regions; or sites associated with
  specified DRC violation objects.

  Note: The -of_objects option requires objects to be specified using the
  get_* commands, such as get_cells or get_pins, rather than specifying
  objects by name. In addition, -of_objects cannot be used with a search
  <pattern>.

  -quiet - (Optional) Execute the command quietly, returning no messages from
  the command. The command also returns TCL_OK regardless of any errors
  encountered during execution.

  Note: Any errors encountered on the command-line, while launching the
  command, will be returned. Only errors occurring inside the command will be
  trapped.

  -verbose - (Optional) Temporarily override any message limits and return
  all messages from this command.

  Note: Message limits can be defined with the set_msg_config command.

  <patterns> - (Optional) Match sites against the specified patterns. The
  default pattern is the wildcard `*` which gets a list of all sites on the
  target device.

Examples:

  The following example gets a list of all sites available on the target
  device:

    get_sites

  The following example returns the number of sites that are not currently
  used on the device. Both command forms in the example return the same
  results. The second command directly evaluates the IS_USED boolean
  property:

    llength [get_sites -filter {IS_USED==0}] 
    -or- 
    llength [get_sites -filter !IS_USED]

  Note: If no sites match the pattern you will get a warning.

  The following example gets all of the sites on the device, and returns the
  unique SITE_TYPEs:

    set sites [get_sites] 
    set type {} 
    foreach x $sites { 
       set prop [get_property SITE_TYPE $x] 
       if { [lsearch -exact $type $prop] == -1 } {  
          lappend type $prop  
       }  
    } 
    foreach y $type {  
       puts "SITE_TYPE: $y"  
    }

  The following example shows three different forms for specifying the range
  of sites to return:

    get_sites -range {SLICE_X0Y0 SLICE_X1Y1} 
    SLICE_X0Y0 SLICE_X0Y1 SLICE_X1Y0 SLICE_X1Y1 
    get_sites -range SLICE_X0Y0 -range SLICE_X1Y1 
    SLICE_X0Y0 SLICE_X0Y1 SLICE_X1Y0 SLICE_X1Y1 
    get_sites -range {SLICE_X0Y0:SLICE_X1Y1} 
    SLICE_X0Y0 SLICE_X0Y1 SLICE_X1Y0 SLICE_X1Y1

See Also:

   *  get_cells
   *  get_drc_violations
   *  get_property
   *  list_property
   *  report_property
