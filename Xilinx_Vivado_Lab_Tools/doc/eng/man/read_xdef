
Description:

  Reads a Xilinx Design Exchange File (XDEF). The XDEF file includes the
  netlist, the location, and optionally the routing information of an
  implemented design. You can import an XDEF file into an open design.

  Note: When reading an XDEF file into an open implemented design, the
  placement and routing of the current implementation will be overwritten by
  the imported data.

  When reading an XDEF file with routing information included, you can
  optionally ignore the routing information and simply use the LOC
  information to place the logic elements onto the device.

Arguments:

  -print_release_version - (Optional) Print the current software version from
  the XDEF file. This allows you to see which version of the software was
  used to write the XDEF file.

  -no_routing - (Optional) Do not import routing information from the XDEF
  file.

  -cell <arg> - (Optional) Import the XDEF file relative to the specified
  cell. The data is imported into the hierarchy of the specified cell.

  -strict - (Optional) Force a strict matching of placement and routing
  information with the block it is imported into. An error is returned if the
  XDEF data does not match the cell instances in the specified cell.

  Note: This argument is only valid for use with the -cell argument.

  -quiet - (Optional) Execute the command quietly, returning no messages from
  the command. The command also returns TCL_OK regardless of any errors
  encountered during execution.

  Note: Any errors encountered on the command-line, while launching the
  command, will be returned. Only errors occurring inside the command will be
  trapped.

  -verbose - (Optional) Temporarily override any message limits and return
  all messages from this command.

  Note: Message limits can be defined with the set_msg_config command.

  <file> - The name of the XDEF file to be imported.

  Note: If the path is not specified as part of the file name, the tool will
  search for the specified file in the current working directory and then in
  the directory from which the tool was launched.

Examples:

  The following example reads the specified XDEF file from the current
  working directory, or the directory from which the tool was launched:

    read_xdef design.xdef

  The following example imports the specified XDEF file into the hierarchy of
  the specified cell, using strict matching, and ignores the routing
  information:

    read_xdef C:/Data/cell.xdef -cell [get_cells cpuEngine] -strict -no_routing

See Also:

   *  write_xdef
