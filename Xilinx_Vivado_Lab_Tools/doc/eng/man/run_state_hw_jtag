
Description:

  Transition the hw_jtag object of the current hardware target to the
  specified TAP stable state.

  A hw_jtag object is created by the Hardware Manager feature of the Vivado
  Design Suite when a hardware target is opened in JTAG mode using the
  open_hw_target -jtag_mode command.

  The run_state_hw_jtag command specifies:

   *  An ending or target TAP stable state to transition to.

   *  An optional state path list to transition through to get from the
      current state to the target state.

  If an optional -state path list is defined, then the state list must
  contain all states needed to reach the stable state, or the command will
  return an error. If no state path list is defined, then the command will
  transition from the current state to the target state according to the
  state transition paths defined in the following table:

    Current     Target      State Transition Path 
    State       State 
    DRPAUSE     RESET       DRPAUSE -> DREXIT2 -> DRUPDATE -> DRSELECT ->  
                                IRSELECT-> RESET 
    DRPAUSE     IDLE        DRPAUSE -> DREXIT2 -> DRUPDATE -> IDLE 
    DRPAUSE     DRPAUSE     DRPAUSE -> DREXIT2 -> DRUPDATE -> DRSELECT -> 
                                DRCAPTURE -> DREXIT1 -> DRPAUSE 
    DRPAUSE     IRPAUSE     DRPAUSE -> DREXIT2 -> DRUPDATE -> DRSELECT ->  
                                IRSELECT -> IRCAPTURE -> IREXIT12 -> IRPAUSE 
    IDLE        RESET       IDLE -> DRSELECT -> IRSELECT -> RESET 
    IDLE        IDLE        IDLE 
    IDLE        DRPAUSE     IDLE -> DRSELECT -> DRCAPTURE -> DREXIT1 -> DRPAUSE 
    IDLE        IRPAUSE     IDLE -> DRPAUSE -> IRSELECT ->IRCAPTURE ->  
                                IREXIT1 -> IRPAUSE 
    IRPAUSE     RESET       IRPAUSE -> IREXIT2 -> IRUPDATE -> DRSELECT ->  
                                IRSELECT -> RESET 
    IRPAUSE     IDLE        IRPAUSE -> IREXIT2 -> IRUPDATE -> IDLE 
    IRPAUSE     DRPAUSE     IRPAUSE -> IREXIT2 -> IRUPDATE -> DRSELECT ->  
                                DRCAPTURE -> DREXIT1 -> DRPAUSE 
    IRPAUSE     IRPAUSE     IRPAUSE -> IREXIT2 -> IRUPDATE -> DRSELECT ->  
                                IRSELECT -> IRCAPTURE -> IREXIT1 -> IRPAUSE 
    RESET       RESET       RESET 
    RESET       IDLE        RESET -> IDLE 
    RESET       DRPAUSE     RESET -> IDLE -> DRSELECT -> DRCAPTURE ->  
                                DREXIT1 -> DRPAUSE 
    RESET       IRPAUSE     RESET -> IDLE -> DRSELECT -> IRSELECT ->  
                                IRCAPTURE -> IREXIT1 -> IRPAUSE

  This command returns the target stable state when successful, or returns an
  error if it fails.

Arguments:

  -state <args> - (Optional) A valid path sequence of states to transition
  the hw_jtag object from the current state to the target <stable_state>.
  Valid states include:

   *  IDLE

   *  RESET

   *  DRSELECT, DRCAPTURE, DRSHIFT, DRPAUSE, DREXIT1, DREXIT2, DRUPDATE

   *  IRSELECT, IRCAPTURE, IRSHIFT, IRPAUSE, IREXIT1, IREXIT2, IRUPDATE

  -quiet - (Optional) Execute the command quietly, returning no messages from
  the command. The command also returns TCL_OK regardless of any errors
  encountered during execution.

  Note: Any errors encountered on the command-line, while launching the
  command, will be returned. Only errors occurring inside the command will be
  trapped.

  -verbose - (Optional) Temporarily override any message limits and return
  all messages from this command.

  Note: Message limits can be defined with the set_msg_config command.

  <stable_state> - (Required) Valid stable target state, or end state. Valid
  target states include:

   *  IDLE

   *  RESET

   *  DRPAUSE

   *  IRPAUSE

Example:

  The following example transitions through various TAP stable states:

    // Go to state RESET 
    run_state_hw_jtag RESET  
     
    // From current state RESET, go to DRPAUSE 
    run_state_hw_jtag DRPAUSE  
     
    // From DRPAUSE, go to IDLE state transitioning through  
    // the specified states 
    run_state_hw_jtag -state {DREXIT2 DRUPDATE IDLE} IDLE  
     
    // From IDLE, go to RESET, through the specified states  
    // note that specified path starts with an extra TCK  
    // clock cycle in the IDLE state 
    run_state_hw_jtag RESET -state {IDLE DRSELECT IRSELECT RESET}

See Also:

   *  connect_hw_server
   *  current_hw_target
   *  open_hw_target
   *  runtest_hw_jtag
   *  scan_dr_hw_jtag
   *  scan_ir_hw_jtag
