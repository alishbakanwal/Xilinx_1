
Description:

  Launch the Software Development Kit (SDK) to design the software for a
  top-level design that includes a block design with an embedded processor
  like MicroBlaze, or Zynq-7000 All Programmable SoC. Block designs are
  created in the IP Integrator feature of the Vivado Design Suite with the
  create_bd_design command.

  This command uses the hardware definition file created by the write_sysdef
  command which is run automatically by the Vivado Design Suite after
  implementation and bitstream generation. The <top_level_design_name>
  .sysdef file is found in the runs/impl_1 folder.

  This command returns a transcript of the SDK tool launch.

Arguments:

  -bit <arg> - (Optional) Specify the bitstream file for FPGA programming.

  -bmm <arg> - (Optional) Specify the BMM file for BRAM initialization.

  -workspace <arg> - (Optional) Specify the workspace directory for SDK
  projects. This is the folder in which your software projects are stored.

  -lp <arg> - (Optional) Specify the library, or repository path, for
  Driver/OS/Library search directories. This is a collection of libraries and
  drivers that form the lowest layer of your application software stack.

  -hwspec <arg> - (Optional) Specify the hardware definition file created by
  the write_sysdef command.

  -quiet - (Optional) Execute the command quietly, returning no messages from
  the command. The command also returns TCL_OK regardless of any errors
  encountered during execution.

  Note: Any errors encountered on the command-line, while launching the
  command, will be returned. Only errors occurring inside the command will be
  trapped.

  -verbose - (Optional) Temporarily override any message limits and return
  all messages from this command.

  Note: Message limits can be defined with the set_msg_config command.

Examples:

  The following example launches SDK, loading the specified hardware
  definition file for the project, and indicates the workspace to use:

    launch_sdk -hwspec C:/Data/ug940/lab1/lab1.runs/impl_1/lab1.sysdef \ 
      -workspace C:/Data/sdk_work/

See Also:

   *  write_hwdef
   *  write_sysdef
