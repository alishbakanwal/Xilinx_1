
Description:

  Get a list of address segments in the current IP Integrator subsystem design.

  Note: To improve memory and performance, the get_* commands return a
  container list of a single type of objects (e.g. cells, nets, pins, or
  ports). You can add new objects to the list (using lappend for instance),
  but you can only add the same type of object that is currently in the list.
  Adding a different type of object, or string, to the list is not permitted
  and will result in a Tcl error.

Arguments:

  -regexp - (Optional) Specifies that the search <patterns> are written as
  regular expressions. Both search <patterns> and -filter expressions must be
  written as regular expressions when this argument is used. Xilinx regular
  expression Tcl commands are always anchored to the start of the search
  string. You can add ".*" to the beginning or end of a search string to
  widen the search to include a substring. See
  http://perldoc.perl.org/perlre.html for help with regular expression
  syntax.

  Note: The Tcl built-in command regexp is not anchored, and works as a
  standard Tcl command. For more information refer to
  http://www.tcl.tk/man/tcl8.5/TclCmd/regexp.htm.

  -hierarchical - (Optional) Get address segments from all levels of the IP
  Integrator subsystem design hierarchy, or current instance. Without this
  argument, the command will only get address segments from the top of the
  subsystem design hierarchy. When using -hierarchical, the search pattern
  should not contain a hierarchy separator because the search pattern is
  applied at each level of the hierarchy, not to the full hierarchical name.
  For instance, searching for U1/* searches each level of the hierarchy for
  objects with U1/ in the name. This may not return the intended results.

  Note: When used with -regexp, the specified search string is matched
  against the full hierarchical name, and the U1/* search pattern will work
  as intended.

  -filter <args> - (Optional) Filter the results list with the specified
  expression. The -filter argument filters the list of objects returned by
  get_bd_addr_segs based on property values on the address segments. You can
  find the properties on an object with the report_property or list_property
  commands. In the case of the IP Integrator address segments object,
  "OFFSET", "RANGE" and "USAGE" are some of the properties that can be used
  to filter results.

  The filter search pattern should be quoted to avoid having to escape
  special characters that may be found in net, pin, or cell names, or other
  properties. String matching is case-sensitive and is always anchored to the
  start and to the end of the search string. The wildcard "*" character can
  be used at the beginning or at the end of a search string to widen the
  search to include a substring of the property value.

  Note: The filter returns an object if a specified property exists on the
  object, and the specified pattern matches the property value on the object.
  In the case of the "*" wildcard character, this will match a property with
  a defined value of "".

  For string comparison, the specific operators that can be used in filter
  expressions are "equal" (==), "not-equal" (!=), "match" (=~), and
  "not-match" (!~). Numeric comparison operators <, >, <=, and >= can also be
  used. Multiple filter expressions can be joined by AND and OR (&& and ||).
  The following gets input pins that do NOT contain the "RESET" substring
  within their name:

    get_pins * -filter {DIRECTION == IN && NAME !~ "*RESET*"}

  Boolean (bool) type properties can be directly evaluated in filter
  expressions as true or not true:

    -filter {IS_PRIMITIVE && !IS_LOC_FIXED}

  -of_objects <arg> - (Optional) Get the address segments that are assigned
  to the specified address spaces, as returned by the get_bd_addr_spaces
  command, or of cells or interface pins, as returned by get_bd_cells and
  get_bd_intf_pins. You can also get slave address_segments of associated
  master address segments using get_bd_addr_segs.

  Note: The -of_objects option requires objects to be specified using the
  get_* commands, such as get_cells or get_pins, rather than specifying
  objects by name. In addition, -of_objects cannot be used with a search
  <pattern>.

  -excluded - (Optional) Get the address segments that are excluded from the
  address spaces specified by the -of_objects option.

  -addressing - (Optional) Get addressing segments of the address spaces
  specified by the -of_objects option. This reports all available segments of
  the address spaces.

  -addressed - (Optional) Get addressed segments of the address spaces
  specified by the -of_objects option. This reports the segments of the
  address spaces that are utilized.

  -addressables - (Optional) Get addressable segments, that are not already
  occupied by address segments, of the address spaces of the objects
  specified by the -of_objects option.

  Note: -addressables, -addressed, and -addressing are mutually exclusive,
  and cannot be used together.

  -quiet - (Optional) Execute the command quietly, returning no messages from
  the command. The command also returns TCL_OK regardless of any errors
  encountered during execution.

  Note: Any errors encountered on the command-line, while launching the
  command, will be returned. Only errors occurring inside the command will be
  trapped.

  -verbose - (Optional) Temporarily override any message limits and return
  all messages from this command.

  Note: Message limits can be defined with the set_msg_config command.

  <patterns> - (Optional) Match address segments against the specified
  patterns. The default pattern is the wildcard `*` which gets a list of all
  address segments in the current IP subsystem design. More than one pattern
  can be specified to find multiple address segments based on different
  search criteria.

  Note: You must enclose multiple search patterns in braces {} to present the
  list as a single element.

Examples:

  The following example gets the address segments of the specified address
  spaces:

    get_bd_addr_segs -of_objects [get_bd_addr_spaces -of_objects \ 
    [get_bd_cells /microblaze_1]] 
    /microblaze_1/Data/SEG1  
    /microblaze_1/Data/SEG3  
    /microblaze_1/Instruction/SEG2

  Note: If there are no objects matching the pattern you will get a warning.

See Also:

   *  assign_bd_addr
   *  create_bd_addr_seg
   *  exclude_bd_addr_seg
   *  get_bd_addr_segs
   *  get_bd_addr_spaces
   *  get_bd_cells
   *  get_bd_intf_pins
   *  include_bd_addr_seg
