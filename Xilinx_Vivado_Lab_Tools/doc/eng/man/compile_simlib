
Description:

  Compile Xilinx<tm tmtype="reg"/> simulation libraries for the cells and IP
  used in the current project, or from a specified directory for use in
  multiple design projects.

  The Vivado Design Suite provides simulation models as a set of files and
  libraries that contain the behavioral and timing models for use by the
  Vivado simulator. The compile_simlib command compiles these libraries for
  use by third-party simulators prior to design simulation. Libraries must
  generally be compiled or recompiled with a new software release to update
  simulation models and to support a new version of a simulator.

  Note: You should rerun the compile_simlib command any time a new third
  party simulator will be used, or a new Vivado Design Suite version or
  update is installed.

  When this command is run from a current project, the tool will use the
  device family, target language, and library settings specified by the
  project as the default values, rather than the default settings of the
  command defined below. The default settings can be overridden by specifying
  the necessary options when the command is run.

  The compile_simlib command uses simulator compilation directives when
  compiling the simulation libraries. You can edit the default configuration
  settings using the config_compile_simlib command.

  The command returns information related to the compiled libraries, or an
  error if it fails.

Arguments:

  -directory <arg> - (Optional) Directory path for saving the compiled
  library results.

  Note: By default, the libraries are saved in the current working directory
  in Non-Project mode, and the libraries are saved in
  "<project>/<project>.cache/compile_simlib" directory in Project mode. Refer
  to the Vivado Design Suite User Guide: Design Flows Overview (UG892) for
  more information on Project and Non-Project modes.

  -family <arg> - (Optional) Compile selected libraries to the specified
  device family. All device families will be generated by default. The
  following are the device families that can be specified:

   *  all (generate libraries for all device families, the default)

   *  virtexuplus (for Virtex<tm tmtype="reg"/> UltraScale+<tm tmtype="tm"/>
      devices)

   *  virtexu (for Virtex<tm tmtype="reg"/> UltraScale<tm tmtype="tm"/>
      devices)

   *  virtex7 (for Virtex-7)

   *  virtex7l (for Virtex-7 Lower Power)

   *  qvirtex7 (for Virtex-7 Defense Grade)

   *  qvirtex7l (for Virtex-7 Lower Power Defense Grade)

   *  kintexuplus (for Kintex<tm tmtype="reg"/> UltraScale+ devices)

   *  kintexu (for Kintex<tm tmtype="reg"/> UltraScale devices)

   *  kintex7 (for Kintex-7)

   *  kintex7l (for Kintex-7 Lower Power)

   *  qkintex7 (for Kintex-7 Defense Grade)

   *  qkintex7l (for Kintex-7 Lower Power Defense Grade)

   *  artix7 (for Artix<tm tmtype="reg"/>-7)

   *  artix7l (for Artix-7 Lower Power)

   *  qartix7 (for Artix-7 Defense Grade)

   *  qartix7l (for Artix-7 Lower Power Defense Grade)

   *  zynquplus (for Zynq<tm tmtype="reg"/> UltraScale+ devices)

   *  zynq (for Zynq<tm tmtype="reg"/> devices)

   *  azynq (for Zynq<tm tmtype="reg"/> Automotive)

   *  qzynq (for Zynq<tm tmtype="reg"/> Defense Grade)

  -force - (Optional) Overwrite the current pre-compiled libraries.

  -language [ verilog | vhdl | all ] - (Optional) Compile libraries for the
  specified language. If this option is not specified then the language will
  be set according to the simulator selected with -simulator. For
  multi-language simulators both Verilog and VHDL libraries will be compiled.

  -library <arg> - (Optional) Specify the simulation library to compile. As a
  default, the compile_simlib command will compile all simulation libraries.
  Valid values are:

   *  all (the default)

   *  unisim

   *  simprim

  To specify multiple libraries, repeat the -lib options for each library.
  For example:

    .. -library unisim -library simprim ..

  -print_library_info - (Optional) Print the library information for the
  compiled simulation library.

  -simulator <arg> - (Required) Compile libraries for the specified
  simulator. Valid simulator values are:

   *  modelsim - Version 10.5c and later

   *  questa - Version 10.5c and later

   *  ies - (Linux only) Version 15.20.005 or later

   *  vcs_mx - (Linux only) Version L-2016.06 or later

   *  riviera - Version 2016.06 or later

   *  active_hdl - (Windows only) Version 10.3

  -simulator_exec_path <arg> - (Optional) Specify the directory to locate the
  third-party compiler and simulator executables. This option is required if
  the target simulator is not specified in the $PATH or %PATH% environment
  variable; or to override the path from the $PATH or %PATH% environment
  variable.

  -source_library_path <arg> - (Optional) If specified, this directory will
  be searched for the library source files before searching the default
  path(s) defined by the environment variables ($XILINX or $XILINX_VIVADO).

  Note: Do not use this option unless explicitly instructed to by Xilinx<tm
  tmtype="reg"/> Technical Support.

  -no_ip_compile - (Optional) Disables the compilation of simulation files
  for IP in the design or the specified repositories. By default, the
  compile_simlib command compiles the static simulation files for all IP in
  the IP Catalog, including added user and third-party repositories. Use this
  option to disable that feature.

  -32bit - (Optional) Perform simulator compilation in 32-bit mode instead of
  the default 64-bit compilation.

  -quiet - (Optional) Execute the command quietly, returning no messages from
  the command. The command also returns TCL_OK regardless of any errors
  encountered during execution.

  Note: Any errors encountered on the command-line, while launching the
  command, will be returned. Only errors occurring inside the command will be
  trapped.

  -verbose - (Optional) Temporarily override any message limits and return
  all messages from this command.

  Note: Message limits can be defined with the set_msg_config command.

Examples:

  The following example shows how to compile UNISIM and SIMPRIM libraries for
  ModelSim (VHDL) for a design using a Virtex<tm tmtype="reg"/>-7 device:

    compile_simlib -simulator modelsim -family virtex7 -library unisim \ 
       -library simprim -language vhdl

See Also:

   *  config_compile_simlib
   *  export_simulation
   *  launch_simulation
