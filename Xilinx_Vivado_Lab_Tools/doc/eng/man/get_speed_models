
Description:

  Get speed models for UltraScale architecture device resources in the
  current design.

  Speed files are provided by Xilinx for each device and speed grade. Speed
  files contain speed models. There are speed models for the various elements
  of a device: nodes, pips, bels. There are speed models for setup and hold,
  propagation delays, jitter, etc.

  The speed models include information on the delays in nanoseconds (ns)
  associated with device resources like BELs and SITEs and routing resources.
  Speed models are used by the Vivado timing engine to perform analysis of
  the current design in the context of the target part.

  The objects returned are the speed models associated with specific physical
  resources like pips and wires, drawn directly from the speed files. These
  can include capacitance and resistance values and buffer models.

  Note: To improve memory and performance, the get_* commands return a
  container list of a single type of objects (e.g. cells, nets, pins, or
  ports). You can add new objects to the list (using lappend for instance),
  but you can only add the same type of object that is currently in the list.
  Adding a different type of object, or string, to the list is not permitted
  and will result in a Tcl error.

  This command returns the specified speed model objects, or returns an error
  if the command fails.

Arguments:

  -regexp - (Optional) Specifies that the search <patterns> are written as
  regular expressions. Both search <patterns> and -filter expressions must be
  written as regular expressions when this argument is used. Xilinx regular
  expression Tcl commands are always anchored to the start of the search
  string. You can add ".*" to the beginning or end of a search string to
  widen the search to include a substring. See
  http://perldoc.perl.org/perlre.html for help with regular expression
  syntax.

  Note: The Tcl built-in command regexp is not anchored, and works as a
  standard Tcl command. For more information refer to
  http://www.tcl.tk/man/tcl8.5/TclCmd/regexp.htm.

  -nocase - (Optional) Perform case-insensitive matching when a pattern has
  been specified. This argument applies to the use of -regexp only.

  -filter <args> - (Optional) Filter the results list with the specified
  expression. The -filter argument filters the list of objects returned by
  get_speed_models based on property values on the objects. You can find the
  properties on an object with the report_property or list_property commands.
  In the case of the speed_model object, "NAME", "TYPE" and "DELAY" are some
  of the properties that can be used to filter results.

  The filter search pattern should be quoted to avoid having to escape
  special characters that may be found in net, pin, or cell names, or other
  properties. String matching is case-sensitive and is always anchored to the
  start and to the end of the search string. The wildcard "*" character can
  be used at the beginning or at the end of a search string to widen the
  search to include a substring of the property value.

  Note: The filter returns an object if a specified property exists on the
  object, and the specified pattern matches the property value on the object.
  In the case of the "*" wildcard character, this will match a property with
  a defined value of "".

  For string comparison, the specific operators that can be used in filter
  expressions are "equal" (==), "not-equal" (!=), "match" (=~), and
  "not-match" (!~). Numeric comparison operators <, >, <=, and >= can also be
  used. Multiple filter expressions can be joined by AND and OR (&& and ||).
  The following gets input pins that do NOT contain the "RESET" substring
  within their name:

    get_pins * -filter {DIRECTION == IN && NAME !~ "*RESET*"}

  Boolean (bool) type properties can be directly evaluated in filter
  expressions as true or not true:

    -filter {IS_PRIMITIVE && !IS_LOC_FIXED}

  -of_objects <arg> - (Optional) Get the speed models for the specified node,
  bel, pip, or cell objects.

  Note: The -of_objects option requires objects to be specified using the
  get_* commands, such as get_cells or get_pins, rather than specifying
  objects by name. In addition, -of_objects cannot be used with a search
  <pattern>.

  -quiet - (Optional) Execute the command quietly, returning no messages from
  the command. The command also returns TCL_OK regardless of any errors
  encountered during execution.

  Note: Any errors encountered on the command-line, while launching the
  command, will be returned. Only errors occurring inside the command will be
  trapped.

  -verbose - (Optional) Temporarily override any message limits and return
  all messages from this command.

  Note: Message limits can be defined with the set_msg_config command.

Examples:

  The following example reports the properties on the speed model for an A6LUT:

    report_property -all [lindex [get_speed_models -of \ 
    [get_bels SLICE_X0Y0/A6LUT]] 0] 
    Property              Type    Read-only  Value 
    CLASS                 string  true       speed_model 
    DELAY                 double  true       0.043 
    FAST_MAX              double  true       0.035 
    FAST_MIN              double  true       0.028 
    IS_INSTANCE_SPECIFIC  bool    true       1 
    NAME                  string  true       bel_d_lut6_a1_o6 
    NAME_LOGICAL          string  true       bel_d_lut6_a1_o6 
    SLOW_MAX              double  true       0.043 
    SLOW_MIN              double  true       0.036 
    SPEED_INDEX           int     true       65535 
    TYPE                  string  true       bel_delay

  The following example returns the delays, in ns, through a specific A6LUT
  on the device, followed by the delay name for the specified object:

    foreach speed_record [get_speed_models -of [get_bels SLICE_X0Y0/A6LUT]]  
    { 
      puts [format "%6.3f : %s" [get_property DELAY $speed_record] \ 
      [get_property NAME $speed_record]]  
    }

See Also:

   *  get_bels
   *  list_property
   *  report_property
