###############################################################################
# impact.acd: virtex5 device specific data file.
#
# $Header: /devl/xcs/repo/env/Jobs/Cse/XilConfig/data/virtex6.acd,v 1.2 2011/05/22 20:36:37 junf Exp $
#
###############################################################################

###############################
# Properties                  #
###############################
PROPERTY = {
  WAITCLOCKCYCLES = 100; 
  ISC_STYLE_PROGRAM = TRUE; 
  ISC_REGISTER_SIZE = 32; 
  REC_SIZE = 32; 
  KEY_REC_SIZE = 32; 
  PAD_SIZE = 64; 
  SUPPORTED = TRUE; 
  DEVICE_TYPE = "FPGA"; 
  IDCODE = TRUE; 
  VERIFY_PROGRESS_COUNT = "DYNAMIC_CALCULATION"; 
  CHECKSUM_PROGRESS_COUNT = "DYNAMIC_CALCULATION"; 
  BLANKCHECK_PROGRESS_COUNT = "DYNAMIC_CALCULATION"; 
  PROGRAM_PROGRESS_COUNT = "DYNAMIC_CALCULATION"; 
  READBACK_PROGRESS_COUNT = "DYNAMIC_CALCULATION"; 
  ERASE_PROGRESS_COUNT = "DYNAMIC_CALCULATION"; 
  READBACK_OFFSET = 0; 
  ISC_FUSE = "ISC_DNA"; 
  ISC_ENABLE = "ISC_ENABLE"; 
  ISC_DISABLE = "ISC_DISABLE"; 
  ISC_ADV_FPGA_OPTIMIZATION = TRUE; 
  SMAP_ADVANCED_READBACK = TRUE; 
  SPI_SUPPORTED = TRUE; 
  BPI_SUPPORTED = TRUE; 
  DONE_BIT = 5; 
  INIT_BIT = 4; 
  CONCURRENT_CLASS = "CCChain"; 
  USERCODE = TRUE; 
  NUM_PROCESSOR = 0; 
  FRAME_SIZE = 2592; 
  STATUS_LOCATION_31 = "[31] EFUSE BUSY STATUS"; 
  STATUS_LOCATION_30 = "[30] RESERVED"; 
  STATUS_LOCATION_29 = "[29] BAD PACKET ERROR"; 
  STATUS_LOCATION_28 = "[28] HSWAPEN PIN"; 
  STATUS_LOCATION_27 = "[27] RESERVED"; 
  STATUS_LOCATION_26 = "[26] CFG BUS WIDTH DETECTION"; 
  STATUS_LOCATION_25 = "[25] CFG BUS WIDTH DETECTION"; 
  STATUS_LOCATION_24 = "[24] SPI FLASH SELECT PIN FS[2]"; 
  STATUS_LOCATION_23 = "[23] SPI FLASH SELECT PIN FS[1]"; 
  STATUS_LOCATION_22 = "[22] SPI FLASH SELECT PIN FS[0]"; 
  STATUS_LOCATION_21 = "[21] RESERVED"; 
  STATUS_LOCATION_20 = "[20] CFG STARTUP STATE MACHINE PHASE"; 
  STATUS_LOCATION_19 = "[19] CFG STARTUP STATE MACHINE PHASE"; 
  STATUS_LOCATION_18 = "[18] CFG STARTUP STATE MACHINE PHASE"; 
  STATUS_LOCATION_17 = "[17] SYSTEM MONITOR OVER-TEMP ALARM STATUS"; 
  STATUS_LOCATION_16 = "[16] SECURITY ERROR"; 
  STATUS_LOCATION_15 = "[15] IDCODE ERROR"; 
  STATUS_LOCATION_14 = "[14] DONE PIN"; 
  STATUS_LOCATION_13 = "[13] DONE INTERNAL SIGNAL STATUS"; 
  STATUS_LOCATION_12 = "[12] INIT_B PIN"; 
  STATUS_LOCATION_11 = "[11] INIT_B INTERNAL SIGNAL STATUS"; 
  STATUS_LOCATION_10 = "[10] MODE PIN M[2]"; 
  STATUS_LOCATION_9 = "[9] MODE PIN M[1]"; 
  STATUS_LOCATION_8 = "[8] MODE PIN M[0]"; 
  STATUS_LOCATION_7 = "[7] GHIGH STATUS"; 
  STATUS_LOCATION_6 = "[6] GWE STATUS"; 
  STATUS_LOCATION_5 = "[5] GTS_CFG_B STATUS"; 
  STATUS_LOCATION_4 = "[4] END OF STARTUP (EOS) STATUS"; 
  STATUS_LOCATION_3 = "[3] DCI MATCH STATUS"; 
  STATUS_LOCATION_2 = "[2] PLL LOCK STATUS"; 
  STATUS_LOCATION_1 = "[1] DECRYPTOR ERROR"; 
  STATUS_LOCATION_0 = "[0] CRC ERROR"; 
  BOOTSTS_15 = "[15] HMAC_ERROR_1 - HMAC ERROR"; 
  BOOTSTS_14 = "[14] WRAP_ERROR_1 - BPI FLASH ADDRESS COUNTER WRAP AROUND ERROR"; 
  BOOTSTS_13 = "[13] CRC_ERROR_1 - CYCLIC REDUNDANCY CHECK (CRC) ERROR"; 
  BOOTSTS_12 = "[12] ID_ERROR_1 - FPGA DEVICE IDCODE ERROR"; 
  BOOTSTS_11 = "[11] WTO_ERROR_1 - WATCHDOG TIME OUT ERROR"; 
  BOOTSTS_10 = "[10] IPROG_1 - INTERNAL WARMBOOT (IPROG) TRIGGERED RECONFIGURATION"; 
  BOOTSTS_9 = "[9] FALLBACK_1 - FALLBACK TRIGGERED RECONFIGURATION"; 
  BOOTSTS_8 = "[8] VALID_1 - ERROR OR END OF STARTUP (EOS) DETECTED"; 
  BOOTSTS_7 = "[7] HMAC_ERROR_0 - HMAC ERROR"; 
  BOOTSTS_6 = "[6] WRAP_ERROR_0 - BPI FLASH ADDRESS COUNTER WRAP AROUND ERROR"; 
  BOOTSTS_5 = "[5] CRC_ERROR_0 - CYCLIC REDUNDANCY CHECK (CRC) ERROR"; 
  BOOTSTS_4 = "[4] ID_ERROR_0 - FPGA DEVICE IDCODE ERROR"; 
  BOOTSTS_3 = "[3] WTO_ERROR_0 - WATCHDOG TIME OUT ERROR"; 
  BOOTSTS_2 = "[2] IPROG_0 - INTERNAL WARMBOOT (IPROG) TRIGGERED RECONFIGURATION"; 
  BOOTSTS_1 = "[1] FALLBACK_0 - FALLBACK TRIGGERED RECONFIGURATION"; 
  BOOTSTS_0 = "[0] VALID_0 - ERROR OR END OF STARTUP (EOS) DETECTED"; 
  EFUSE_SUPPORTED = TRUE; 
  EFUSE_PROGRAM_WAIT_TIME = 1000; 
  EFUSE_NO_CDR_BIT_INDEX = 4; 
  EFUSE_TPREF_SEL_BIT_INDEX = 13; 
  EFUSE_TPREF_SEL_BIT_LENGTH = 2; 
  EFUSE_PROGRAM_VPP_SEL = 9; # in decimal
  EFUSE_PROGRAM_VPP_SEL_BIT_LENGTH = 5; 
  EFUSE_PROGRAM_VPP_SEL_BIT_INDEX = 19; 
  EFUSE_PROGRAM_PROGRESS_COUNT = 0; 
  EFUSE_MAX_PROGRAM_RETRY_COUNT = 2; 
  EFUSE_KEY_REG_BIT_LENGTH = 256; 
  EFUSE_ID_REG_BIT_LENGTH = 64; 
  EFUSE_USER_REG_BIT_LENGTH = 32; 
  EFUSE_CNTL_REG_BIT_LENGTH = 32; 
  EFUSE_CNTL_REGISTER_BIT_31 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_30 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_29 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_28 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_27 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_26 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_25 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_24 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_23 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_22 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_21 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_20 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_19 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_18 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_17 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_16 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_15 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_14 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_13 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_12 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_11 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_10 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_9 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_8 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_7 = "Disable Control Register Write"; 
  EFUSE_CNTL_REGISTER_BIT_6 = "Disable User Register Write"; 
  EFUSE_CNTL_REGISTER_BIT_5 = "NOT_VALID"; 
  EFUSE_CNTL_REGISTER_BIT_4 = "Disable Key Register Write"; 
  EFUSE_CNTL_REGISTER_BIT_3 = "Disable User Register Read"; 
  EFUSE_CNTL_REGISTER_BIT_2 = "Disable Key Register Read"; 
  EFUSE_CNTL_REGISTER_BIT_1 = "Configure After Power Cycle Only"; 
  EFUSE_CNTL_REGISTER_BIT_0 = "Use AES eFUSE Key Only"; 
  INIT_WAIT_TIME = 9532; 
};

## The following data for the devices are updated. June 14, 2004

#The PROGRAM_PROGRESS_COUNT is FRAME_COUNT/16 because each data size is FRAME_SIZE*16 =VERIFY_PROGRESS_COUNT
#non bram-word count is FDRI wordCount in the xl spreadsheet.
#6vlx590::PROPERTY= FRAME_COUNT,    62256:
#                   CLB_FRAMES,     46656:
#                   NON_BRAM_WC,    2111664:
#                   FPGA_PROGRAM_PROGRESS_COUNT, 3891:
#                   PROGRAM_PROGRESS_COUNT, 3891;;
#
#
xc6vlx40t = {
  PROPERTY = {
    FRAME_COUNT = 5370; 
    CLB_FRAMES = 3964; 
    NON_BRAM_WC = 321084; 
    FPGA_ISC_PROGRAM_PROGRESS_COUNT = 321084; 
    FPGA_PROGRAM_PROGRESS_COUNT = 336; 
    PROGRAM_PROGRESS_COUNT = 336; 
  };
};

xc6vlx75t = {
  PROPERTY = {
    FRAME_COUNT = 10350; 
    CLB_FRAMES = 7422; 
    NON_BRAM_WC = 601182; 
    FPGA_ISC_PROGRAM_PROGRESS_COUNT = 601182; 
    FPGA_PROGRAM_PROGRESS_COUNT = 647; 
    PROGRAM_PROGRESS_COUNT = 647; 
  };
};

#6vlx100t::PROPERTY=  FRAME_COUNT,    17046:
#                   CLB_FRAMES,     11664:
#                   NON_BRAM_WC,    555960:
#                   FPGA_PROGRAM_PROGRESS_COUNT, 1065:
#                   PROGRAM_PROGRESS_COUNT, 1065;;
#
xc6vlx115t = {
  PROPERTY = {
    FRAME_COUNT = 22728; 
    CLB_FRAMES = 15552; 
    NON_BRAM_WC = 741280; 
    FPGA_ISC_PROGRAM_PROGRESS_COUNT = 741280; 
    FPGA_PROGRAM_PROGRESS_COUNT = 1420; 
    PROGRAM_PROGRESS_COUNT = 1420; 
  };
};

xc6vlx130t = {
  PROPERTY = {
    FRAME_COUNT = 17245; 
    CLB_FRAMES = 12370; 
    NON_BRAM_WC = 1001970; 
    FPGA_ISC_PROGRAM_PROGRESS_COUNT = 1001970; 
    FPGA_PROGRAM_PROGRESS_COUNT = 1078; 
    PROGRAM_PROGRESS_COUNT = 1078; 
  };
};

xc6vlx195t = {
  PROPERTY = {
    FRAME_COUNT = 24295; 
    CLB_FRAMES = 17970; 
    NON_BRAM_WC = 1455570; 
    FPGA_ISC_PROGRAM_PROGRESS_COUNT = 1455570; 
    FPGA_PROGRAM_PROGRESS_COUNT = 1518; 
    PROGRAM_PROGRESS_COUNT = 1518; 
  };
};


xc6vlx240t = {
  PROPERTY = {
    FRAME_COUNT = 29154; 
    CLB_FRAMES = 21564; 
    NON_BRAM_WC = 1746684; 
    FPGA_ISC_PROGRAM_PROGRESS_COUNT = 1746684; 
    FPGA_PROGRAM_PROGRESS_COUNT = 1822; 
    PROGRAM_PROGRESS_COUNT = 1822; 
  };
};

xc6vlx365t = {
  PROPERTY = {
    FRAME_COUNT = 37956; 
    CLB_FRAMES = 30132; 
    NON_BRAM_WC = 2440692; 
    FPGA_ISC_PROGRAM_PROGRESS_COUNT = 2440692; 
    FPGA_PROGRAM_PROGRESS_COUNT = 2372; 
    PROGRAM_PROGRESS_COUNT = 2372; 
  };
};

xc6vlx550t = {
  PROPERTY = {
    FRAME_COUNT = 56934; 
    CLB_FRAMES = 45198; 
    NON_BRAM_WC = 3661038; 
    FPGA_ISC_PROGRAM_PROGRESS_COUNT = 3661038; 
    FPGA_PROGRAM_PROGRESS_COUNT = 3558; 
    PROGRAM_PROGRESS_COUNT = 3558; 
  };
};

xc6vlx760 = {
  PROPERTY = {
    FRAME_COUNT = 73062; 
    CLB_FRAMES = 59760; 
    NON_BRAM_WC = 4840560; 
    FPGA_ISC_PROGRAM_PROGRESS_COUNT = 4840560; 
    FPGA_PROGRAM_PROGRESS_COUNT = 4566; 
    PROGRAM_PROGRESS_COUNT = 4566; 
  };
};

#6vsx260t::PROPERTY= FRAME_COUNT,    62064:
#                   CLB_FRAMES,     33696:
#                   NON_BRAM_WC,    1793832:
#                   FPGA_PROGRAM_PROGRESS_COUNT, 3879:
##                   PROGRAM_PROGRESS_COUNT, 3879;;
#
xc6vsx315t = {
  PROPERTY = {
    FRAME_COUNT = 41214; 
    CLB_FRAMES = 28764; 
    NON_BRAM_WC = 2329884; 
    FPGA_ISC_PROGRAM_PROGRESS_COUNT = 2329884; 
    FPGA_PROGRAM_PROGRESS_COUNT = 2576; 
    PROGRAM_PROGRESS_COUNT = 2576; 
  };
};

xc6vsx475t = {
  PROPERTY = {
    FRAME_COUNT = 61821; 
    CLB_FRAMES = 43128; 
    NON_BRAM_WC = 349482; 
    FPGA_ISC_PROGRAM_PROGRESS_COUNT = 349482; 
    FPGA_PROGRAM_PROGRESS_COUNT = 3864; 
    PROGRAM_PROGRESS_COUNT = 3864; 
  };
};

xc6vhx250t = {
  PROPERTY = {
    FRAME_COUNT = 31506; 
    CLB_FRAMES = 22344; 
    NON_BRAM_WC = 1809864; 
    FPGA_ISC_PROGRAM_PROGRESS_COUNT = 1809864; 
    FPGA_PROGRAM_PROGRESS_COUNT = 1970; 
    PROGRAM_PROGRESS_COUNT = 1970; 
  };
};

xc6vhx255t = {
  PROPERTY = {
    FRAME_COUNT = 31506; 
    CLB_FRAMES = 22344; 
    NON_BRAM_WC = 1809864; 
    FPGA_ISC_PROGRAM_PROGRESS_COUNT = 1809864; 
    FPGA_PROGRAM_PROGRESS_COUNT = 1970; 
    PROGRAM_PROGRESS_COUNT = 1970; 
  };
};

xc6vhx380t = {
  PROPERTY = {
    FRAME_COUNT = 47259; 
    CLB_FRAMES = 33516; 
    NON_BRAM_WC = 2714796; 
    FPGA_ISC_PROGRAM_PROGRESS_COUNT = 2714796; 
    FPGA_PROGRAM_PROGRESS_COUNT = 2954; 
    PROGRAM_PROGRESS_COUNT = 2954; 
  };
};

xc6vhx565t = {
  PROPERTY = {
    FRAME_COUNT = 63423; 
    CLB_FRAMES = 46980; 
    NON_BRAM_WC = 3805380; 
    FPGA_ISC_PROGRAM_PROGRESS_COUNT = 3805380; 
    FPGA_PROGRAM_PROGRESS_COUNT = 3964; 
    PROGRAM_PROGRESS_COUNT = 3964; 
  };
};

xc6vcx75t = {
  PROPERTY = {
    FRAME_COUNT = 10350; 
    CLB_FRAMES = 7422; 
    NON_BRAM_WC = 601182; 
    FPGA_ISC_PROGRAM_PROGRESS_COUNT = 601182; 
    FPGA_PROGRAM_PROGRESS_COUNT = 647; 
    PROGRAM_PROGRESS_COUNT = 647; 
  };
};

xc6vcx130t = {
  PROPERTY = {
    FRAME_COUNT = 17245; 
    CLB_FRAMES = 12370; 
    NON_BRAM_WC = 1001970; 
    FPGA_ISC_PROGRAM_PROGRESS_COUNT = 1001970; 
    FPGA_PROGRAM_PROGRESS_COUNT = 1078; 
    PROGRAM_PROGRESS_COUNT = 1078; 
  };
};

xc6vcx195t = {
  PROPERTY = {
    FRAME_COUNT = 24295; 
    CLB_FRAMES = 17970; 
    NON_BRAM_WC = 1455570; 
    FPGA_ISC_PROGRAM_PROGRESS_COUNT = 1455570; 
    FPGA_PROGRAM_PROGRESS_COUNT = 1518; 
    PROGRAM_PROGRESS_COUNT = 1518; 
  };
};

xc6vcx240t = {
  PROPERTY = {
    FRAME_COUNT = 29154; 
    CLB_FRAMES = 21564; 
    NON_BRAM_WC = 1746684; 
    FPGA_ISC_PROGRAM_PROGRESS_COUNT = 1746684; 
    FPGA_PROGRAM_PROGRESS_COUNT = 1822; 
    PROGRAM_PROGRESS_COUNT = 1822; 
  };
};

###############################
# Operations Table            #
###############################
OPERATION = {
  PROGRAM = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","EXPRESSSVF","EXPRESSXSVF","STAPL"), 
    ("BSFILE","SVF","STAPL"), 
    ("HW140","PARALLEL"), 
    ("SS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN"), 
    ("SM","PARALLEL","MULTILINX")
  );
  VERIFY = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN"), 
    ("HW140","PARALLEL"), 
    ("SM","PARALLEL","MULTILINX")
  );
  READIDCODE = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"), 
    ("BSFILE","SVF","STAPL"), 
    ("HW140","PARALLEL")
  );
  CHECKIDCODE = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"), 
    ("BSFILE","SVF","STAPL"), 
    ("HW140","PARALLEL")
  );
  READSTATUSREGISTER = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"), 
    ("BSFILE","SVF","STAPL"), 
    ("HW140","PARALLEL")
  );
  READUSERCODE = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"), 
    ("BSFILE","SVF","STAPL"), 
    ("HW140","PARALLEL")
  );
  BYPASS = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"), 
    ("BSFILE","PARALLEL","SVF","STAPL"), 
    ("HW140","PARALLEL")
  );
  HIGHZ = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"), 
    ("BSFILE","SVF","STAPL"), 
    ("HW140","PARALLEL")
  );
  DOPRELOAD = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"), 
    ("BSFILE","SVF","STAPL"), 
    ("HW140","PARALLEL")
  );
  ISPENABLE = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"), 
    ("BSFILE","SVF","STAPL"), 
    ("HW140","PARALLEL")
  );
  CONLD = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"), 
    ("BSFILE","SVF","STAPL"), 
    ("HW140","PARALLEL")
  );
  EXPRESSSVF =     ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN"); 
  EXPRESSXSVF =     ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN"); 
};




PROGRAM_OPTION = {
  VERIFY = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN"), 
    ("HW140","PARALLEL"), 
    ("SM","PARALLEL","MULTILINX")
  );
  PROGRAMKEY = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"), 
    ("BSFILE","SVF","STAPL"), 
    ("HW140","PARALLEL")
  );
  SECUREMODE = (
    ("BS","PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"), 
    ("BSFILE","SVF","STAPL"), 
    ("HW140","PARALLEL")
  );
};

BSDL_OPERATION = {
  READIDCODE =     ("PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"); 
  READSTATUSREGISTER =     ("PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"); 
  CHECKIDCODE =     ("PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"); 
  READUSERCODE =     ("PARALLEL","USB2","BASEPLUGIN","ADVPLUGIN","SVF","STAPL"); 
};


###############################
# Slave Serial Virtex Devices #
###############################
# Use base class SSDevice.

###############################
# Select Map Devices    #
###############################
VENTRY_CREATE_SM_DEVICE  =   ("create_virtex_sm_device(const char *part)","ImpactDevice"); 

###############################
# Boundary Scan Devices       #
###############################
VENTRY_CREATE_BS_DEVICE  =   ("create_virtex6_bs_device(const char *part)","ImpactVirtex6Device"); 
VENTRY_CREATE_CSE_ADAPTER_BS_DEVICE  =   ("create_cse_adapter_bs_device(const char *part)","ImpactCseAdapterDevice"); 
VENTRY_CREATE_BSFILE_DEVICE  =   ("create_virtex6_bs_device(const char *part)","ImpactVirtex6Device"); 
VENTRY_CREATE_HW140_DEVICE  =   ("create_virtex6_bs_device(const char *part)","ImpactVirtex6Device"); 

BSDL_INSTRUCTION_OPCODE  = {
  EXTEST = 				1111000000; 
  EXTEST_PULSE = 		1111111100; 
  EXTEST_TRAIN = 		1111111101; 
  SAMPLE = 				1111000001; 
  PRELOAD = 			1111000001; 
  USER1 = 				1111000010; 
  USER2 = 				1111000011; 
  USER3 = 				1111100010; 
  USER4 = 				1111100011; 
  CFG_OUT = 			1111000100; 
  CFG_IN = 				1111000101; 
  JRSVD = 				1111000110; 
  INTEST_RSVD = 		1111000111; 
  USERCODE = 			1111001000; 
  IDCODE = 				1111001001; 
  HIGHZ = 				1111001010; 
  JPROGRAM = 			1111001011; 
  JSTART = 				1111001100; 
  JSHUTDOWN = 			1111001101; 
  ISC_DNA = 			1111010111; 
  BYPASS = 				1111111111; 
  FUSE_UPDATE = 		1111110000; 
  FUSE_KEY = 			1111110001; 
  FUSE_ID = 			1111110010; 
  FUSE_USER = 			1111110011; 
  FUSE_CNTL = 			1111110100; 
  MONITOR_DRP = 		1111110111; 
  ISC_ENABLE = 			1111010000; 
  ISC_PROGRAM = 		1111010001; 
  ISC_PROGRAM_KEY = 	1111010010; 
  XSC_PROGRAM_KEY = 	1111010010; 
  ISC_ADDRESS_SHIFT = 	1111010011; 
  ISC_NOOP = 			1111010100; 
  ISC_READ = 			1111010101; 
  XSC_READ_RSVD = 		1111010101; 
  ISC_DISABLE = 		1111010110; 
};

BSDL_INSTRUCTION_CAPTURE = "XXXXXXXX01"; 

BSDL_REGISTER_ACCESS =   ("DATAREG",57,"ISC_DNA"); 


